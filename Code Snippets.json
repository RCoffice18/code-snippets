{
	"dotenv-config": {
	  "prefix": "ac",
	  "body": [
		"const dotenv = require(\"dotenv\");",
		"",
		"// Determine which .env file to load based on NODE_ENV",
		"const nodeEnv = process.env.NODE_ENV || \"development\";",
		"const envFile = `.env.${${nodeEnv}}`;",
		"dotenv.config({ path: envFile });",
		"",
		"// List of required environment variables that cannot have defaults",
		"const strictEnvVars = [",
		"  \"DB_NAME\",",
		"  \"DB_USER\",",
		"  \"DB_PASS\",",
		"  \"API_KEY\",",
		"  \"JWT_SECRET\",",
		"  \"SESSION_SECRET\",",
		"];",
		"",
		"// Other environment variables that can have default values",
		"const defaultEnvVars = {",
		"  DB_HOST: \"localhost\",",
		"  DB_PORT: \"5432\",",
		"  APP_PORT: \"3000\",",
		"  CACHE_HOST: \"localhost\",",
		"  CACHE_PORT: \"6379\",",
		"  CACHE_TTL: \"3600\",",
		"  LOG_LEVEL: \"info\",",
		"  ENABLE_HTTPS: \"false\",",
		"};",
		"",
		"const getEnv = (key, defaultValue = null) => {",
		"  const value = process.env[key];",
		"  if (value === undefined) {",
		"    if (defaultValue === null) {",
		"      throw new Error(`Missing required environment variable: ${${key}}`);",
		"    }",
		"    console.warn(",
		"      `Environment variable ${${key}} not set. Using default value: ${${defaultValue}}`",
		"    );",
		"    return defaultValue;",
		"  }",
		"  return value;",
		"};",
		"",
		"// Validate strictly required environment variables",
		"const validateStrictEnvVars = () => {",
		"  strictEnvVars.forEach((key) => {",
		"    if (!process.env[key]) {",
		"      throw new Error(`Missing critical environment variable: ${${key}}`);",
		"    }",
		"  });",
		"};",
		"",
		"// Populate appConfig with values from environment or defaults",
		"const appConfig = {",
		"  db: {",
		"    host: getEnv(\"DB_HOST\", defaultEnvVars.DB_HOST),",
		"    port: getEnv(\"DB_PORT\", defaultEnvVars.DB_PORT),",
		"    database: getEnv(\"DB_NAME\"), // Strict, no default",
		"    username: getEnv(\"DB_USER\"), // Strict, no default",
		"    password: getEnv(\"DB_PASS\"), // Strict, no default",
		"  },",
		"  app: {",
		"    port: getEnv(\"APP_PORT\", defaultEnvVars.APP_PORT),",
		"    env: getEnv(\"NODE_ENV\", \"development\"),",
		"  },",
		"  logging: {",
		"    level: getEnv(\"LOG_LEVEL\", defaultEnvVars.LOG_LEVEL),",
		"  },",
		"  cache: {",
		"    host: getEnv(\"CACHE_HOST\", defaultEnvVars.CACHE_HOST),",
		"    port: getEnv(\"CACHE_PORT\", defaultEnvVars.CACHE_PORT),",
		"    ttl: getEnv(\"CACHE_TTL\", defaultEnvVars.CACHE_TTL),",
		"  },",
		"  api: {",
		"    key: getEnv(\"API_KEY\"), // Strict, no default",
		"    serviceUrl: getEnv(\"SERVICE_URL\"),",
		"  },",
		"  security: {",
		"    jwtSecret: getEnv(\"JWT_SECRET\"), // Strict, no default",
		"    sessionSecret: getEnv(\"SESSION_SECRET\"), // Strict, no default",
		"    enableHttps: getEnv(\"ENABLE_HTTPS\", defaultEnvVars.ENABLE_HTTPS) === \"true\",",
		"  },",
		"};",
		"",
		"// Run validations for critical env vars",
		"validateStrictEnvVars();",
		"",
		"module.exports = appConfig;"
	  ],
	  "description": "Configuration setup for environment variables with validation and default values"
	}
  }
  
